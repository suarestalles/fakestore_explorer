import 'package:firebase_auth/firebase_auth.dart';
import 'package:get/get.dart';

class AuthController extends GetxController {
  final FirebaseAuth _auth = FirebaseAuth.instance;

  // Rx para manter o usu치rio logado (User? 칠 null se n칚o estiver logado)
  // O 'null' inicial garante que n칚o h치 usu치rio at칠 que o stream confirme.
  Rx<User?> firebaseUser = Rx<User?>(null);

  @override
  void onInit() {
    super.onInit();
    
    // 游꿢 CHAVE: Conectar o stream do Firebase ao Rx do GetX 游꿢
    // Toda vez que o estado de autentica칞칚o mudar, o 'firebaseUser' ser치 atualizado.
    firebaseUser.bindStream(_auth.authStateChanges());
    
    // Opcional: Adicionar l칩gica de redirecionamento (칰til para Single-Page App)
    ever(firebaseUser, _initialScreenRedirect);
  }

  // L칩gica de redirecionamento baseada no estado do usu치rio
  void _initialScreenRedirect(User? user) {
    if (user == null) {
      // Usu치rio n칚o logado, enviar para a tela de Login
      // Usamos 'offAllNamed' para limpar a pilha de navega칞칚o
      Get.offAllNamed('/login'); 
    } else {
      // Usu치rio logado, enviar para a tela principal (Listagem de Produtos)
      Get.offAllNamed('/products');
    }
  }

  // ... (Seu signIn, signUp, signOut functions aqui) ...
}